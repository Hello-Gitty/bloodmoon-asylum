/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package calafie.builder.ihm.generated;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;


import calafie.builder.Builder;
import calafie.builder.Util;
import calafie.builder.ihm.modele.swing.ModeleCapaciteOngletVocation;
import calafie.builder.ihm.modele.swing.ModeleOrdreOngletVocation;
import calafie.builder.ihm.modele.swing.ModeleVocationOngletVocation;
import calafie.builder.ihm.modele.type.TypeVocation;
import calafie.builder.jaxb.Capacite;
import calafie.builder.jaxb.InterfaceJaxb;
import calafie.builder.jaxb.Ordre;
import calafie.builder.jaxb.Vocation;
import calafie.builder.jaxb.Vocations;

/**
 * 
 * @author Dart
 */
public class PanelVocationG extends JPanel {

    private JScrollPane capacitePane;
    private JLabel coutLabel;
    private JButton deleteVocaButton;
    private JButton deleteOrdreButton;
    private JButton deleteCapaButton;
    private JTextArea descriptionLabel;
    private JButton editVocaButton;
    private JButton editOrdreButton1;
    private JButton editCapaButton;
    private JList capaciteList;
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane2;
    private JScrollPane listOrdre;
    private JButton loadButton;
    private JButton newOrdreButton;
    private JButton newCapaButton;
    private JLabel nomOrdreLabel;
    private JButton nouvelleVocaButton;
    private JPanel paneButtonCapa;
    private JPanel paneButtonOrdre;
    private JPanel paneOrdre;
    private JPanel panelButton;
    private JPanel panelLoadData;
    private JLabel potLabel;
    private JButton saveButton;
    private JTable tableOrdres;
    private JComboBox typeCombo;
    private JList vocationList;
    private ModeleOrdreOngletVocation modeleOrdre;
    private ModeleVocationOngletVocation modeleVocation;
    private PopUpOrdre popOrdre;
    private ModeleCapaciteOngletVocation modeleCap;
    private PopVocation popVocation;
    private PopCapacite popCapacite;

    
    /**
     * 
     */
    private static final long serialVersionUID = -8096796690298323643L;

    /**
     * Creates new form PanelVocationG
     */
    public PanelVocationG() {
        initComponents();
        enableButtonOrdre(false);
        enableButtonCapa(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    private void initComponents() {

        JLabel typeLabel = new JLabel();
        typeCombo = new JComboBox();
        jScrollPane1 = new JScrollPane();
        vocationList = new JList();
        panelLoadData = new JPanel();
        saveButton = new JButton();
        loadButton = new JButton();
        panelButton = new JPanel();
        nouvelleVocaButton = new JButton();
        editVocaButton = new JButton();
        deleteVocaButton = new JButton();
        paneButtonOrdre = new JPanel();
        newOrdreButton = new JButton();
        editOrdreButton1 = new JButton();
        deleteOrdreButton = new JButton();
        paneOrdre = new JPanel();
        jScrollPane2 = new JScrollPane();
        descriptionLabel = new JTextArea();
        nomOrdreLabel = new JLabel();
        coutLabel = new JLabel();
        potLabel = new JLabel();
        capacitePane = new JScrollPane();
        capaciteList = new JList();
        paneButtonCapa = new JPanel();
        newCapaButton = new JButton();
        editCapaButton = new JButton();
        deleteCapaButton = new JButton();
        listOrdre = new JScrollPane();
        tableOrdres = new JTable();
        popOrdre = new PopUpOrdre();
        popVocation = new PopVocation();
        popCapacite = new PopCapacite();
        descriptionLabel.setEditable(false);
        modeleOrdre = new ModeleOrdreOngletVocation();
        modeleCap = new ModeleCapaciteOngletVocation();
        modeleVocation = new ModeleVocationOngletVocation();

        typeLabel.setText(Util.getMessage("builder.popOrdre.element.type"));

        nouvelleVocaButton.setText(Util.getMessage("builder.button.newe"));
        editVocaButton.setText(Util.getMessage("builder.button.edit"));
        deleteVocaButton.setText(Util.getMessage("builder.button.delete"));
        editOrdreButton1.setText(Util.getMessage("builder.button.edit"));

        newCapaButton.setText(Util.getMessage("builder.button.newe"));
        editCapaButton.setText(Util.getMessage("builder.button.edit"));
        deleteCapaButton.setText(Util.getMessage("builder.button.delete"));

        deleteOrdreButton.setText(Util.getMessage("builder.button.delete"));
        newOrdreButton.setText(Util.getMessage("builder.button.new"));
        editVocaButton.setText(Util.getMessage("builder.button.edit"));
        deleteVocaButton.setText(Util.getMessage("builder.button.delete"));

        saveButton.setText(Util.getMessage("builder.button.save"));
        loadButton.setText(Util.getMessage("builder.button.load"));

        tableOrdres.setModel(modeleOrdre);

        typeCombo.setModel(new DefaultComboBoxModel(TypeVocation.getModele()));

        vocationList.setModel(modeleVocation);
        jScrollPane1.setViewportView(vocationList);

        panelLoadData.setBorder(BorderFactory.createEtchedBorder());

        org.jdesktop.layout.GroupLayout panelLoadDataLayout = new org.jdesktop.layout.GroupLayout(
                panelLoadData);
        panelLoadData.setLayout(panelLoadDataLayout);
        panelLoadDataLayout
                .setHorizontalGroup(panelLoadDataLayout
                        .createParallelGroup(
                                org.jdesktop.layout.GroupLayout.LEADING)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING,
                                panelLoadDataLayout
                                        .createSequentialGroup()
                                        .addContainerGap(
                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                Short.MAX_VALUE)
                                        .add(loadButton)
                                        .addPreferredGap(
                                                org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(saveButton).addContainerGap()));
        panelLoadDataLayout.setVerticalGroup(panelLoadDataLayout
                .createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(panelLoadDataLayout
                        .createParallelGroup(
                                org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(saveButton).add(loadButton)));

        panelButton.setBorder(BorderFactory.createEtchedBorder());

        saveButton.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                exporter();
            }
        });
        loadButton.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                importer();
            }
        });

        editOrdreButton1.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                ouvrirPopOrdre(true);
            }
        });

        newOrdreButton.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                ouvrirPopOrdre(false);
            }
        });

        deleteOrdreButton.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                supprimerOrdre();
            }
        });
        tableOrdres.getSelectionModel().setSelectionMode(
                ListSelectionModel.SINGLE_SELECTION);

        tableOrdres.getSelectionModel().addListSelectionListener(
                new ListSelectionListener() {

                    public void valueChanged(ListSelectionEvent e) {
                        selection();
                    }
                });

        vocationList.getSelectionModel().addListSelectionListener(
                new ListSelectionListener() {

                    public void valueChanged(ListSelectionEvent e) {
                        clicVocation();
                    }
                });

        capaciteList.getSelectionModel().addListSelectionListener(
                new ListSelectionListener() {

                    public void valueChanged(ListSelectionEvent e) {
                        clicCapacite();
                    }
                });

        editCapaButton.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                ouvrirPopUpCapacite(true);

            }
        });

        newCapaButton.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                ouvrirPopUpCapacite(false);

            }
        });

        deleteCapaButton.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                supprimerCapa();

            }
        });

        editVocaButton.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                ouvrirPopUpVocation(true);

            }
        });

        nouvelleVocaButton.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                ouvrirPopUpVocation(false);

            }
        });

        deleteVocaButton.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                supprimerVoca();

            }
        });

        typeCombo.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                selectTypeVoca();

            }

        });

        org.jdesktop.layout.GroupLayout panelButtonLayout = new org.jdesktop.layout.GroupLayout(
                panelButton);
        panelButton.setLayout(panelButtonLayout);
        panelButtonLayout
                .setHorizontalGroup(panelButtonLayout
                        .createParallelGroup(
                                org.jdesktop.layout.GroupLayout.LEADING)
                        .add(panelButtonLayout
                                .createSequentialGroup()
                                .addContainerGap()
                                .add(panelButtonLayout
                                        .createParallelGroup(
                                                org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(panelButtonLayout
                                                .createSequentialGroup()
                                                .add(nouvelleVocaButton)
                                                .add(0, 0, Short.MAX_VALUE))
                                        .add(org.jdesktop.layout.GroupLayout.LEADING,
                                                panelButtonLayout
                                                        .createSequentialGroup()
                                                        .add(0, 0,
                                                                Short.MAX_VALUE)
                                                        .add(panelButtonLayout
                                                                .createParallelGroup(
                                                                        org.jdesktop.layout.GroupLayout.LEADING)
                                                                .add(org.jdesktop.layout.GroupLayout.LEADING,
                                                                        editVocaButton)
                                                                .add(org.jdesktop.layout.GroupLayout.LEADING,
                                                                        deleteVocaButton))))
                                .addContainerGap()));
        panelButtonLayout.setVerticalGroup(panelButtonLayout
                .createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(panelButtonLayout
                        .createSequentialGroup()
                        .add(nouvelleVocaButton)
                        .addPreferredGap(
                                org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(editVocaButton)
                        .addPreferredGap(
                                org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(deleteVocaButton)));

        paneButtonOrdre.setBorder(BorderFactory.createEtchedBorder());

        org.jdesktop.layout.GroupLayout paneButtonOrdreLayout = new org.jdesktop.layout.GroupLayout(
                paneButtonOrdre);
        paneButtonOrdre.setLayout(paneButtonOrdreLayout);
        paneButtonOrdreLayout.setHorizontalGroup(paneButtonOrdreLayout
                .createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(paneButtonOrdreLayout
                        .createSequentialGroup()
                        .addContainerGap()
                        .add(newOrdreButton)
                        .addPreferredGap(
                                org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(editOrdreButton1)
                        .addPreferredGap(
                                org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(deleteOrdreButton)
                        .addContainerGap(
                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                Short.MAX_VALUE)));
        paneButtonOrdreLayout.setVerticalGroup(paneButtonOrdreLayout
                .createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(paneButtonOrdreLayout
                        .createParallelGroup(
                                org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(newOrdreButton).add(editOrdreButton1)
                        .add(deleteOrdreButton)));

        paneOrdre.setBorder(BorderFactory.createEtchedBorder());

        jScrollPane2.setViewportView(descriptionLabel);

        org.jdesktop.layout.GroupLayout paneOrdreLayout = new org.jdesktop.layout.GroupLayout(
                paneOrdre);
        paneOrdre.setLayout(paneOrdreLayout);
        paneOrdreLayout
                .setHorizontalGroup(paneOrdreLayout
                        .createParallelGroup(
                                org.jdesktop.layout.GroupLayout.LEADING)
                        .add(paneOrdreLayout
                                .createSequentialGroup()
                                .addContainerGap()
                                .add(paneOrdreLayout
                                        .createParallelGroup(
                                                org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(jScrollPane2,
                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                357, Short.MAX_VALUE)
                                        .add(nomOrdreLabel,
                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                Short.MAX_VALUE)
                                        .add(coutLabel,
                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                Short.MAX_VALUE)
                                        .add(potLabel,
                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                Short.MAX_VALUE))
                                .addContainerGap()));
        paneOrdreLayout.setVerticalGroup(paneOrdreLayout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(
                paneOrdreLayout
                        .createSequentialGroup()
                        .add(10, 10, 10)
                        .add(nomOrdreLabel)
                        .addPreferredGap(
                                org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jScrollPane2,
                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                93,
                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(
                                org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(coutLabel)
                        .addPreferredGap(
                                org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(potLabel)
                        .addContainerGap(
                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                Short.MAX_VALUE)));

        capacitePane.setBorder(BorderFactory.createTitledBorder("Capacite"));

        capaciteList.setModel(modeleCap);
        capacitePane.setViewportView(capaciteList);

        paneButtonCapa.setBorder(BorderFactory.createEtchedBorder());

        org.jdesktop.layout.GroupLayout paneButtonCapaLayout = new org.jdesktop.layout.GroupLayout(
                paneButtonCapa);
        paneButtonCapa.setLayout(paneButtonCapaLayout);
        paneButtonCapaLayout
                .setHorizontalGroup(paneButtonCapaLayout
                        .createParallelGroup(
                                org.jdesktop.layout.GroupLayout.LEADING)
                        .add(paneButtonCapaLayout
                                .createSequentialGroup()
                                .addContainerGap()
                                .add(paneButtonCapaLayout
                                        .createParallelGroup(
                                                org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(newCapaButton).add(editCapaButton)
                                        .add(deleteCapaButton))
                                .addContainerGap(
                                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                        Short.MAX_VALUE)));
        paneButtonCapaLayout.setVerticalGroup(paneButtonCapaLayout
                .createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(paneButtonCapaLayout
                        .createSequentialGroup()
                        .add(newCapaButton)
                        .addPreferredGap(
                                org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(editCapaButton)
                        .addPreferredGap(
                                org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(deleteCapaButton)));

        listOrdre.setBorder(BorderFactory.createTitledBorder("Ordres"));

        listOrdre.setViewportView(tableOrdres);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(
                this);
        this.setLayout(layout);
        layout.setHorizontalGroup(layout
                .createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout
                        .createSequentialGroup()
                        .addContainerGap(
                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                Short.MAX_VALUE)
                        .add(layout
                                .createParallelGroup(
                                        org.jdesktop.layout.GroupLayout.LEADING)
                                .add(layout
                                        .createSequentialGroup()
                                        .add(layout
                                                .createParallelGroup(
                                                        org.jdesktop.layout.GroupLayout.LEADING)
                                                .add(layout
                                                        .createParallelGroup(
                                                                org.jdesktop.layout.GroupLayout.TRAILING,
                                                                false)
                                                        .add(jScrollPane1,
                                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                200,
                                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                        .add(layout
                                                                .createSequentialGroup()
                                                                .add(typeLabel)
                                                                .addPreferredGap(
                                                                        org.jdesktop.layout.LayoutStyle.UNRELATED)
                                                                .add(typeCombo,
                                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                        120,
                                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                                .add(panelButton,
                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .add(18, 18, 18)
                                        .add(layout
                                                .createParallelGroup(
                                                        org.jdesktop.layout.GroupLayout.LEADING)
                                                .add(capacitePane,
                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                        127,
                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .add(paneButtonCapa,
                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(
                                                org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(layout
                                                .createParallelGroup(
                                                        org.jdesktop.layout.GroupLayout.LEADING)
                                                .add(listOrdre,
                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                        390,
                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .add(layout
                                                        .createParallelGroup(
                                                                org.jdesktop.layout.GroupLayout.TRAILING)
                                                        .add(paneButtonOrdre,
                                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                        .add(paneOrdre,
                                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                        .add(0, 0, Short.MAX_VALUE))
                                .add(org.jdesktop.layout.GroupLayout.TRAILING,
                                        layout.createSequentialGroup()
                                                .add(0, 0, Short.MAX_VALUE)
                                                .add(panelLoadData,
                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap()));
        layout.setVerticalGroup(layout
                .createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(layout
                        .createSequentialGroup()
                        .addContainerGap()
                        .add(layout
                                .createParallelGroup(
                                        org.jdesktop.layout.GroupLayout.LEADING)
                                .add(layout
                                        .createSequentialGroup()
                                        .add(layout
                                                .createParallelGroup(
                                                        org.jdesktop.layout.GroupLayout.LEADING)
                                                .add(layout
                                                        .createSequentialGroup()
                                                        .add(capacitePane,
                                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                188,
                                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(
                                                                org.jdesktop.layout.LayoutStyle.UNRELATED)
                                                        .add(paneButtonCapa,
                                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                                .add(layout
                                                        .createSequentialGroup()
                                                        .add(listOrdre,
                                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                164,
                                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(
                                                                org.jdesktop.layout.LayoutStyle.UNRELATED)
                                                        .add(paneOrdre,
                                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(
                                                org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(paneButtonOrdre,
                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(
                                                org.jdesktop.layout.LayoutStyle.RELATED,
                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                Short.MAX_VALUE)
                                        .add(panelLoadData,
                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(layout
                                        .createSequentialGroup()
                                        .add(layout
                                                .createParallelGroup(
                                                        org.jdesktop.layout.GroupLayout.BASELINE)
                                                .add(typeLabel)
                                                .add(typeCombo,
                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                        org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                        .add(18, 18, 18)
                                        .add(jScrollPane1,
                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                450,
                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(
                                                org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(panelButton,
                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                                                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                                                org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(0, 110, Short.MAX_VALUE)))
                        .addContainerGap()));
    }// </editor-fold>//GEN-END:initComponents

    private void clearOrdre() {
        descriptionLabel.setText("");
        nomOrdreLabel.setText("");
        coutLabel.setText("");
        potLabel.setText("");
    }

    public void setOrdre(Ordre ordre) {

        String titre = "";

        titre += ordre.getNom();
        if (!ordre.isLegal()) {
            String gravite = ordre.getGravite();
            gravite = gravite.substring(0, 1)
                    + gravite.toLowerCase().substring(1);
            titre += " (" + gravite + (ordre.isPolitique() ? " politique" : "")
                    + ")";
        }

        String pot = "";
        String cout = "Coût : ";
        cout += ordre.getArgent() + "fk |";
        cout += " Fatigue: " + ordre.getPv() + " PdV ";

        if (ordre.isAutomatique()) {
            cout += " | Automatique";
        } else {
            cout += " | Difficulté: " + ordre.getDifficulte();
            pot = "Potentiel : " + ordre.getCaracteristique();
            if (ordre.getOposition().length() > 0) {
                pot += "-" + ordre.getOposition();
            }
            pot += "+" + ordre.getCompetence();
        }

        descriptionLabel.setText(ordre.getDescription());
        nomOrdreLabel.setText(titre);
        coutLabel.setText(cout);
        potLabel.setText(pot);
    }

    public void exporter() {

        Vocations voca = new Vocations();
        voca.getVocation().addAll(Builder.getInstance().getBiblio().getAllVocations());
        InterfaceJaxb inter = new InterfaceJaxb();
        inter.sauvegarderVocation(voca);
    }

    private void ouvrirPopOrdre(boolean modif) {

        clearOrdre();

        if (modif) {
            int index = tableOrdres.getSelectedRow();
            if (index == -1) {
                return;
            }
            Ordre ordre = popOrdre.ouverture(modeleOrdre.getItem(index));
            if (ordre != null) {
                modeleOrdre.modif();
                setOrdre(ordre);
            }
        } else {
            Ordre ordre = popOrdre.ouverture(null);
            if (ordre != null) {
                int index = capaciteList.getSelectedIndex();
                modeleCap.getItem(index).getOrdres().add(ordre);
                modeleOrdre.addOrdre(ordre);
            }
        }
    }

    private void clicVocation() {
        modeleCap.clear();
        int index = vocationList.getSelectedIndex();
        Vocation voca = modeleVocation.getItem(index);
        if (voca != null) {
            modeleCap.addItems(voca.getCapacites().getCapacite());
            modeleCap.modif();
            enableButtonCapa(true);
        }
    }

    private void enableButtonOrdre(boolean enable) {
        editOrdreButton1.setEnabled(enable);
        newOrdreButton.setEnabled(enable);
        deleteOrdreButton.setEnabled(enable);
    }

    private void enableButtonCapa(boolean enable) {
        editCapaButton.setEnabled(enable);
        newCapaButton.setEnabled(enable);
        deleteCapaButton.setEnabled(enable);
    }

    private void clicCapacite() {
        clearOrdre();
        modeleOrdre.clear();
        int index = capaciteList.getSelectedIndex();
        Capacite capa = modeleCap.getItem(index);
        modeleOrdre.addItems(capa.getOrdres());
        modeleOrdre.modif();
        enableButtonOrdre(true);
    }

    private void ouvrirPopUpVocation(boolean modif) {

        if (modif) {
            int index = vocationList.getSelectedIndex();
            if (index == -1) {
                return;
            }

            Vocation voca = modeleVocation.getItem(index);
            TypeVocation oldType = TypeVocation.valueOf(voca.getType());
            voca = popVocation.ouverture(voca);
            if (voca != null) {

                if (!TypeVocation.valueOf(voca.getType()).equals(oldType)) {
                    Builder.getInstance().getBiblio().ajoutVoca(voca, true, oldType);
                }
                modeleVocation.modif();
            }
        } else {
            Vocation voca = popVocation.ouverture(null);
            if (voca != null) {
                modeleVocation.addItem(voca);
                Builder.getInstance().getBiblio().ajoutVoca(voca, false, null);
            }

        }

    }

    private void ouvrirPopUpCapacite(boolean modif) {

        if (modif) {
            int index = capaciteList.getSelectedIndex();
            if (index == -1) {
                return;
            }
            Capacite capa = modeleCap.getItem(index);
            capa = popCapacite.ouverture(capa);
            if (capa != null) {
                modeleCap.modif();
            }

        } else {
            Capacite capa = popCapacite.ouverture(null);
            if (capa != null) {
                int indexVoca = vocationList.getSelectedIndex();
                modeleVocation.getItem(indexVoca).getCapacites().getCapacite()
                        .add(capa);
                modeleCap.addItem(capa);
            }
        }
    }

    private void supprimerCapa() {
        int index = capaciteList.getSelectedIndex();
        modeleCap.deleteItem(index);
    }

    private void supprimerVoca() {
        int index = vocationList.getSelectedIndex();
        modeleVocation.deleteItem(index);
    }

    private void supprimerOrdre() {
        int index = tableOrdres.getSelectedRow();
        modeleOrdre.removeItem(index);
    }

    public void importer() {
        InterfaceJaxb inter = new InterfaceJaxb();
        modeleVocation.clear();
        Vocations res = inter.chargementVocation();
        if (res != null) {
            Builder.getInstance().getBiblio().importerListVocation(res);
            selectTypeVoca();
        }
    }

    private void selection() {
        int index = tableOrdres.getSelectedRow();
        if (index == -1) {
            return;
        }
        Ordre ordre = modeleOrdre.getItem(index);
        if ( ordre != null){
            setOrdre(ordre);
        }
    }

    private void selectTypeVoca() {
        clearSelection();

        TypeVocation type = TypeVocation.values()[typeCombo.getSelectedIndex()];

        List<Vocation> list = Builder.getInstance().getBiblio().getVocations().get(type);
        modeleVocation.addItems(list);
        modeleVocation.modif();

    }

    private void clearSelection() {
        /*
        vocationList.clearSelection();
        tableOrdres.clearSelection();
        capaciteList.clearSelection();
        */
        modeleVocation.clear();
        modeleCap.clear();
        modeleOrdre.clear();

        enableButtonCapa(false);
        enableButtonOrdre(false);

    }

}
